// <auto-generated />
using System;
using ANIMAL.DAL.DataModel;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ANIMAL.DAL.Migrations
{
    [DbContext(typeof(AnimalRescueDbContext))]
    [Migration("20250225080457_Migration_25_02_2025_03")]
    partial class Migration_25_02_2025_03
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ANIMAL.DAL.DataModel.Adopted", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdopterId")
                        .HasColumnType("int");

                    b.Property<DateTime>("AdoptionDate")
                        .HasColumnType("date");

                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.HasKey("Code")
                        .HasName("PK__Adopted__A25C5AA69BF7B47B");

                    b.HasIndex("AdopterId");

                    b.HasIndex("AnimalId");

                    b.ToTable("Adopted");
                });

            modelBuilder.Entity("ANIMAL.DAL.DataModel.Adopter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<bool>("Flag")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("NumAdoptedAnimals")
                        .HasColumnType("int")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("NumReturnedAnimals")
                        .HasColumnType("int")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("RegisterId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Residence")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Adopter");
                });

            modelBuilder.Entity("ANIMAL.DAL.DataModel.Amphibians", b =>
                {
                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<decimal>("Humidity")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<decimal>("Temperature")
                        .HasColumnType("decimal(5, 2)");

                    b.HasIndex("AnimalId");

                    b.ToTable("Amphibians");
                });

            modelBuilder.Entity("ANIMAL.DAL.DataModel.AnimalRecord", b =>
                {
                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<int>("RecordId")
                        .HasColumnType("int");

                    b.HasKey("AnimalId")
                        .HasName("PK__AnimalRecord");

                    b.HasIndex("RecordId");

                    b.ToTable("AnimalRecord");
                });

            modelBuilder.Entity("ANIMAL.DAL.DataModel.Animals", b =>
                {
                    b.Property<int>("IdAnimal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Adopted")
                        .HasColumnType("bit");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Family")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("HealthIssues")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<decimal>("Height")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("Length")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<bool>("Microchipped")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<bool>("Neutered")
                        .HasColumnType("bit");

                    b.Property<string>("PersonalityDescription")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<byte[]>("Picture")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .IsUnicode(false);

                    b.Property<bool>("Socialized")
                        .HasColumnType("bit");

                    b.Property<string>("Species")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Subspecies")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<bool>("Trained")
                        .HasColumnType("bit");

                    b.Property<bool>("Vaccinated")
                        .HasColumnType("bit");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("IdAnimal")
                        .HasName("PK__Animals__951092F0A1868E05");

                    b.ToTable("Animals");
                });

            modelBuilder.Entity("ANIMAL.DAL.DataModel.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("ANIMAL.DAL.DataModel.Balans", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(20, 2)");

                    b.Property<string>("Iban")
                        .IsRequired()
                        .HasColumnType("varchar(21)")
                        .HasMaxLength(21)
                        .IsUnicode(false);

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK__Balans");

                    b.ToTable("Balans");
                });

            modelBuilder.Entity("ANIMAL.DAL.DataModel.Birds", b =>
                {
                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<string>("CageSize")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("RecommendedToys")
                        .IsRequired()
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("Sociability")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("AnimalId")
                        .HasName("PK__Birds__A21A73070FA89F7C");

                    b.ToTable("Birds");
                });

            modelBuilder.Entity("ANIMAL.DAL.DataModel.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdopterId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool>("Read")
                        .HasColumnType("bit");

                    b.HasKey("Id")
                        .HasName("PK__Contact");

                    b.HasIndex("AdopterId");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("ANIMAL.DAL.DataModel.ContageusAnimals", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<bool>("Contageus")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("DesisseName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__ContageusAnimals");

                    b.HasIndex("AnimalId");

                    b.ToTable("ContageusAnimals");
                });

            modelBuilder.Entity("ANIMAL.DAL.DataModel.Euthanasia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<bool>("Complited")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameOfDesissse")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("Id")
                        .HasName("PK__Euthanasia");

                    b.HasIndex("AnimalId");

                    b.ToTable("Euthanasia");
                });

            modelBuilder.Entity("ANIMAL.DAL.DataModel.Fish", b =>
                {
                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<string>("CompatibleSpecies")
                        .IsRequired()
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("RecommendedItems")
                        .IsRequired()
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("TankSize")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasIndex("AnimalId");

                    b.ToTable("Fish");
                });

            modelBuilder.Entity("ANIMAL.DAL.DataModel.Food", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AgeGroup")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("AnimalType")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<decimal>("CaloriesPerServing")
                        .HasColumnType("decimal(10, 4)");

                    b.Property<DateTime>("ExporationDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("FatContent")
                        .HasColumnType("decimal(10, 4)");

                    b.Property<decimal>("FiberContent")
                        .HasColumnType("decimal(10, 4)");

                    b.Property<string>("FoodType")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("MeasurementPerServing")
                        .IsRequired()
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("MeasurementWeight")
                        .IsRequired()
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("WeightPerServing")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Id")
                        .HasName("PK__Food");

                    b.ToTable("Food");
                });

            modelBuilder.Entity("ANIMAL.DAL.DataModel.FoundRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("OwnerOIB")
                        .IsRequired()
                        .HasColumnType("varchar(11)")
                        .HasMaxLength(11)
                        .IsUnicode(false);

                    b.Property<string>("OwnerPhoneNumber")
                        .IsRequired()
                        .HasColumnType("varchar(13)")
                        .HasMaxLength(13)
                        .IsUnicode(false);

                    b.Property<string>("OwnerSurname")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("RegisterId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id")
                        .HasName("PK__FoundRecord");

                    b.HasIndex("AnimalId");

                    b.HasIndex("RegisterId");

                    b.ToTable("FoundRecord");
                });

            modelBuilder.Entity("ANIMAL.DAL.DataModel.Funds", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdopterId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(20, 2)");

                    b.Property<DateTime>("DateTimed")
                        .HasColumnType("datetime2");

                    b.Property<string>("Purpose")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id")
                        .HasName("PK__Funds");

                    b.HasIndex("AdopterId");

                    b.ToTable("Funds");
                });

            modelBuilder.Entity("ANIMAL.DAL.DataModel.Labs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__Labs_1235468");

                    b.HasIndex("AnimalId");

                    b.ToTable("Labs");
                });

            modelBuilder.Entity("ANIMAL.DAL.DataModel.Mammals", b =>
                {
                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<string>("CoatType")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("GroomingProducts")
                        .IsRequired()
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.HasIndex("AnimalId");

                    b.ToTable("Mammals");
                });

            modelBuilder.Entity("ANIMAL.DAL.DataModel.Medicines", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AmountOfMedicine")
                        .HasColumnType("decimal(20, 6)");

                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("FrequencyOfMedicationUse")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("MedicationIntake")
                        .HasColumnType("int");

                    b.Property<string>("MesurmentUnit")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("NameOfMedicines")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool>("Usage")
                        .HasColumnType("bit");

                    b.Property<string>("VetUsername")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id")
                        .HasName("PK__Medicines");

                    b.HasIndex("AnimalId");

                    b.ToTable("Medicines");
                });

            modelBuilder.Entity("ANIMAL.DAL.DataModel.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id")
                        .HasName("PK__News");

                    b.ToTable("News");
                });

            modelBuilder.Entity("ANIMAL.DAL.DataModel.Parameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LabId")
                        .HasColumnType("int");

                    b.Property<string>("MeasurementUnits")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("ParameterName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal>("ParameterValue")
                        .HasColumnType("decimal(10, 4)");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("Id")
                        .HasName("PK__Parameter");

                    b.HasIndex("LabId");

                    b.ToTable("Parameter");
                });

            modelBuilder.Entity("ANIMAL.DAL.DataModel.Reptiles", b =>
                {
                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<string>("CompatibleSpecies")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("RecommendedItems")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("Sociability")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("TankSize")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("AnimalId")
                        .HasName("PK__Reptiles__A21A7307D28BF62E");

                    b.ToTable("Reptiles");
                });

            modelBuilder.Entity("ANIMAL.DAL.DataModel.ReturnedAnimal", b =>
                {
                    b.Property<int>("ReturnCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdopterId")
                        .HasColumnType("int");

                    b.Property<int>("AdoptionCode")
                        .HasColumnType("int");

                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("date");

                    b.Property<string>("ReturnReason")
                        .IsRequired()
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.HasKey("ReturnCode")
                        .HasName("PK__Returned__4CF726C86410F49F");

                    b.HasIndex("AdopterId");

                    b.HasIndex("AdoptionCode");

                    b.HasIndex("AnimalId");

                    b.ToTable("ReturnedAnimal");
                });

            modelBuilder.Entity("ANIMAL.DAL.DataModel.SystemRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RecordDescription")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("RecordName")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("RecordNumber")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("PK__SystemRecord");

                    b.ToTable("SystemRecord");
                });

            modelBuilder.Entity("ANIMAL.DAL.DataModel.Toys", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AgeGroup")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("AnimalType")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal>("Hight")
                        .HasColumnType("decimal(10,2 )");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("ToyType")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal>("Width")
                        .HasColumnType("decimal(10,2 )");

                    b.HasKey("Id")
                        .HasName("PK__Toys");

                    b.ToTable("Toys");
                });

            modelBuilder.Entity("ANIMAL.DAL.DataModel.VetVisits", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("TypeOfVisit")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id")
                        .HasName("PK__VetVisits");

                    b.HasIndex("AnimalId");

                    b.ToTable("VetVisits");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("ANIMAL.DAL.DataModel.Adopted", b =>
                {
                    b.HasOne("ANIMAL.DAL.DataModel.Adopter", "Adopter")
                        .WithMany("Adopted")
                        .HasForeignKey("AdopterId")
                        .HasConstraintName("FK__Adopted__Adopter__4E88ABD4")
                        .IsRequired();

                    b.HasOne("ANIMAL.DAL.DataModel.Animals", "Animal")
                        .WithMany("AdoptedNavigation")
                        .HasForeignKey("AnimalId")
                        .HasConstraintName("FK__Adopted__AnimalI__4D94879B")
                        .IsRequired();
                });

            modelBuilder.Entity("ANIMAL.DAL.DataModel.Amphibians", b =>
                {
                    b.HasOne("ANIMAL.DAL.DataModel.Animals", "Animal")
                        .WithMany()
                        .HasForeignKey("AnimalId")
                        .HasConstraintName("FK__Amphibian__Anima__5CD6CB2B")
                        .IsRequired();
                });

            modelBuilder.Entity("ANIMAL.DAL.DataModel.AnimalRecord", b =>
                {
                    b.HasOne("ANIMAL.DAL.DataModel.Animals", "Animal")
                        .WithOne("AnimalRecord")
                        .HasForeignKey("ANIMAL.DAL.DataModel.AnimalRecord", "AnimalId")
                        .HasConstraintName("FK__AnimalRecord__Animals__AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ANIMAL.DAL.DataModel.SystemRecord", "Record")
                        .WithMany()
                        .HasForeignKey("RecordId")
                        .HasConstraintName("FK__AnimalRecord__SystemRecord__RecordId")
                        .IsRequired();
                });

            modelBuilder.Entity("ANIMAL.DAL.DataModel.Birds", b =>
                {
                    b.HasOne("ANIMAL.DAL.DataModel.Animals", "Animal")
                        .WithOne("Birds")
                        .HasForeignKey("ANIMAL.DAL.DataModel.Birds", "AnimalId")
                        .HasConstraintName("FK__Birds__AnimalId__5812160E")
                        .IsRequired();
                });

            modelBuilder.Entity("ANIMAL.DAL.DataModel.Contact", b =>
                {
                    b.HasOne("ANIMAL.DAL.DataModel.Adopter", "Adopter")
                        .WithMany()
                        .HasForeignKey("AdopterId")
                        .HasConstraintName("FK__Contact__Adopter")
                        .IsRequired();
                });

            modelBuilder.Entity("ANIMAL.DAL.DataModel.ContageusAnimals", b =>
                {
                    b.HasOne("ANIMAL.DAL.DataModel.Animals", "Animals")
                        .WithMany()
                        .HasForeignKey("AnimalId")
                        .HasConstraintName("FK__ContageusAnimals__Animal")
                        .IsRequired();
                });

            modelBuilder.Entity("ANIMAL.DAL.DataModel.Euthanasia", b =>
                {
                    b.HasOne("ANIMAL.DAL.DataModel.Animals", "Animals")
                        .WithMany()
                        .HasForeignKey("AnimalId")
                        .HasConstraintName("FK__Euthanasia__Animal")
                        .IsRequired();
                });

            modelBuilder.Entity("ANIMAL.DAL.DataModel.Fish", b =>
                {
                    b.HasOne("ANIMAL.DAL.DataModel.Animals", "Animal")
                        .WithMany()
                        .HasForeignKey("AnimalId")
                        .HasConstraintName("FK__Fish__AnimalId__5EBF139D")
                        .IsRequired();
                });

            modelBuilder.Entity("ANIMAL.DAL.DataModel.FoundRecord", b =>
                {
                    b.HasOne("ANIMAL.DAL.DataModel.Animals", "Animal")
                        .WithMany("FoundRecord")
                        .HasForeignKey("AnimalId")
                        .HasConstraintName("FK__FoundRecord__Animal")
                        .IsRequired();

                    b.HasOne("ANIMAL.DAL.DataModel.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("RegisterId")
                        .HasConstraintName("FK__FoundRecord__User");
                });

            modelBuilder.Entity("ANIMAL.DAL.DataModel.Funds", b =>
                {
                    b.HasOne("ANIMAL.DAL.DataModel.Adopter", "Adopter")
                        .WithMany()
                        .HasForeignKey("AdopterId")
                        .HasConstraintName("FK__Funds__Adopter")
                        .IsRequired();
                });

            modelBuilder.Entity("ANIMAL.DAL.DataModel.Labs", b =>
                {
                    b.HasOne("ANIMAL.DAL.DataModel.Animals", "Animals")
                        .WithMany()
                        .HasForeignKey("AnimalId")
                        .HasConstraintName("FK__Labs__Animals")
                        .IsRequired();
                });

            modelBuilder.Entity("ANIMAL.DAL.DataModel.Mammals", b =>
                {
                    b.HasOne("ANIMAL.DAL.DataModel.Animals", "Animal")
                        .WithMany()
                        .HasForeignKey("AnimalId")
                        .HasConstraintName("FK__Mammals__AnimalI__5535A963")
                        .IsRequired();
                });

            modelBuilder.Entity("ANIMAL.DAL.DataModel.Medicines", b =>
                {
                    b.HasOne("ANIMAL.DAL.DataModel.Animals", "Animal")
                        .WithMany()
                        .HasForeignKey("AnimalId")
                        .HasConstraintName("FK__Medicines__Animal")
                        .IsRequired();
                });

            modelBuilder.Entity("ANIMAL.DAL.DataModel.Parameter", b =>
                {
                    b.HasOne("ANIMAL.DAL.DataModel.Labs", "Labs")
                        .WithMany("Parameters")
                        .HasForeignKey("LabId")
                        .IsRequired();
                });

            modelBuilder.Entity("ANIMAL.DAL.DataModel.Reptiles", b =>
                {
                    b.HasOne("ANIMAL.DAL.DataModel.Animals", "Animal")
                        .WithOne("Reptiles")
                        .HasForeignKey("ANIMAL.DAL.DataModel.Reptiles", "AnimalId")
                        .HasConstraintName("FK__Reptiles__Animal__5AEE82B9")
                        .IsRequired();
                });

            modelBuilder.Entity("ANIMAL.DAL.DataModel.ReturnedAnimal", b =>
                {
                    b.HasOne("ANIMAL.DAL.DataModel.Adopter", "Adopter")
                        .WithMany("ReturnedAnimal")
                        .HasForeignKey("AdopterId")
                        .HasConstraintName("FK__ReturnedA__Adopt__534D60F1")
                        .IsRequired();

                    b.HasOne("ANIMAL.DAL.DataModel.Adopted", "AdoptionCodeNavigation")
                        .WithMany("ReturnedAnimal")
                        .HasForeignKey("AdoptionCode")
                        .HasConstraintName("FK__ReturnedA__Adopt__5165187F")
                        .IsRequired();

                    b.HasOne("ANIMAL.DAL.DataModel.Animals", "Animal")
                        .WithMany("ReturnedAnimal")
                        .HasForeignKey("AnimalId")
                        .HasConstraintName("FK__ReturnedA__Anima__52593CB8")
                        .IsRequired();
                });

            modelBuilder.Entity("ANIMAL.DAL.DataModel.VetVisits", b =>
                {
                    b.HasOne("ANIMAL.DAL.DataModel.Animals", "Animals")
                        .WithMany()
                        .HasForeignKey("AnimalId")
                        .HasConstraintName("FK__VetVisits__Animal")
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ANIMAL.DAL.DataModel.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ANIMAL.DAL.DataModel.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ANIMAL.DAL.DataModel.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ANIMAL.DAL.DataModel.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
